# JobDetails.jsx

* In JobDetails.jsx, can we use filter method?

# Yes, you can use .filter() method,

? filter syntax: jobs.filter((job) => job.id === Number(jobId))
?    .map((job) => <div key={job.id}>...</div>)

* Mistakes in your original code:**

1. ❌ Wrong filter syntax: You wrote `jobId === job.id ? (...) : ("")` inside filter - this is ternary operator, not filter's callback
2. ❌ Type mismatch: `jobId` is string, `job.id` is number - need `Number(jobId)`
3. ❌ Filter returns array: After filter, you need `.map()` to render

* Correct filter syntax:

```javascript
! jobs.filter((job) => job.id === Number(jobId))
!    .map((job) => <div key={job.id}>...</div>)
```

# Filter vs Find - Which is better?

| Method    | Returns                        | Best for              |
|-----------|--------------------------------|-----------------------|
|`.find()`  | Single item or `undefined`     | Getting ONE item      |
|`.filter()`| Array (even if empty or 1 item)| Getting MULTIPLE items|

# For your case:
- You want only 1 job, so `.find()` is better and more efficient.
- `.filter()` kaam karega but extra `.map()` call ki zarurat padegi
- `.find()` cleaner aur faster hai single item ke liye

#Recommendation: Use `.find()` for single items! and Use `.filter()` only when you expect multiple matches.
#and Use `.map()` only on arrays returned by `.filter()`.
